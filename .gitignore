# This file tells Git which files and folders to ignore.
# We don't want to track temporary files, build outputs, or sensitive information.

# -------------------------------------------------------------------
# Core Project Ignores
# -------------------------------------------------------------------

# Node.js Dependencies:
# These folders contain all the libraries your project uses. They can be
# very large and are regenerated by `npm install`.
node_modules/

# Package Lock Files:
# Specifies exact versions of dependencies.
# Keep package-lock.json for npm (good for consistency).
# If you use Yarn, uncomment yarn.lock.
package-lock.json
# yarn.lock
# .pnpm-lock.yaml # For pnpm users

# Environment Variables:
# These files contain sensitive information (like API keys, database URLs).
# NEVER commit them to Git!
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Build Outputs:
# These are generated files from compiling or bundling your code.
# They are not part of your source code and can be regenerated.
build/
dist/
out/
.next/               # For Next.js projects (if you use it for frontend)
.cache/              # General cache directories
.parcel-cache/       # Parcel bundler specific cache

# Logs and Reports:
# Temporary log files and diagnostic reports.
logs/
*.log
npm-debug.log*
yarn-debug.log*
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json # Node.js diagnostic reports

# Runtime Data:
# Process IDs or lock files created when the application runs.
pids/
*.pid
*.seed
*.pid.lock

# IDE and Editor Files:
# Configuration files specific to your development environment.
.DS_Store             # macOS system files
.vscode/              # VS Code settings (optional: comment out if shared within team)
.idea/                # WebStorm/IntelliJ IDEA
*.iml                 # IntelliJ IDEA module files

# Temporary/Backup Files:
# Files created by editors for backups or temporary storage.
*.bak                 # General backup files

# -------------------------------------------------------------------
# Testing Specific Ignores (for Playwright)
# -------------------------------------------------------------------

# Test Results and Artifacts:
# Output from your tests, like screenshots, videos, or test reports.
coverage/             # Code coverage reports (e.g., from Istanbul/NYC)
.nyc_output/          # NYC coverage output

# Playwright-specific output and cache
Testing/test-results/
Testing/playwright-report/
Testing/blob-report/
Testing/playwright/.cache/ # Playwright's internal cache for browsers etc.

# -------------------------------------------------------------------
# Backend Specific Ignores
# -------------------------------------------------------------------

# Backend uploaded files (ensure this covers your upload directory)
backend/uploads/

# Backend Configuration:
# Your sensitive backend environment configuration.
/backend/config/config.env # CRITICAL: Keeps your backend config secure!

# -------------------------------------------------------------------
# Frontend Specific Ignores
# -------------------------------------------------------------------

# Frontend public images that might be dynamically generated/uploaded
# This specifically ignores the content of the 'img' folder within 'frontend/public'
frontend/public/img/

# -------------------------------------------------------------------
# Caching Files (Various Tools)
# -------------------------------------------------------------------

.eslintcache          # ESLint cache
.stylelintcache       # Stylelint cache
*.tsbuildinfo         # TypeScript build cache

# -------------------------------------------------------------------
# Less Common / Optional Ignores
# Uncomment these if your project specifically uses them.
# -------------------------------------------------------------------

# jspm_packages/      # If you use JSPM
# web_modules/        # If you use Snowpack
# .npm/               # Optional npm cache directory
# .node_repl_history  # Optional Node.js REPL history
# *.tgz               # Output of 'npm pack'
# bower_components/   # If you use Bower
# .lock-wscript       # For node-waf
# build/Release/      # Compiled binary addons
# .rpt2_cache/        # Microbundle cache
# .rts2_cache_cjs/    # Microbundle cache (specific)
# .rts2_cache_es/     # Microbundle cache (specific)
# .rts2_cache_umd/    # Microbundle cache (specific)
# .serverless/        # If you use Serverless framework
# .fusebox/           # If you use FuseBox
# .dynamodb/          # If you use local DynamoDB
# .tern-port          # For TernJS
# .vscode-test/       # For VSCode extension development
# .nuxt/              # Nuxt.js build / generate output
# .vuepress/dist/     # Vuepress build output
# .temp/              # Vuepress v2.x temp
# .docusaurus/        # Docusaurus cache and generated files
# **/.vitepress/dist/ # Vitepress build output
# **/.vitepress/cache/ # Vitepress cache directory